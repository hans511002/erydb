###########################################################################
#
# snmpd.conf
#
#   - created by the snmpconf configuration program
#
###########################################################################
# SECTION: Trap Destinations
#
#   Here we define who the agent will send traps to.

# trapsink: A SNMPv1 trap receiver
#   arguments: host [community] [portnum]

# parentOAMIPStub - place holder to postConfigure
trapsink  parentOAMIPStub public 

# trap2sink: A SNMPv2c trap receiver
#   arguments: host [community] [portnum]

# parentOAMIPStub - place holder to postConfigure
trap2sink  parentOAMIPStub public 

# trapcommunity: Default trap sink community to use
#   arguments: community-string

trapcommunity  public



###########################################################################
# SECTION: System Information Setup
#
#   This section defines some of the information reported in
#   the "system" mib group in the mibII tree.

# syslocation: The [typically physical] location of the system.
#   Note that setting this value here means that when trying to
#   perform an snmp SET operation to the sysLocation.0 variable will make
#   the agent return the "notWritable" error code.  IE, including
#   this token in the snmpd.conf file will disable write access to
#   the variable.
#   arguments:  location_string

syslocation Unknown (edit /etc/snmp/snmpd.conf)
syslocation  erydb frisco,tx

# syscontact: The contact information for the administrator
#   Note that setting this value here means that when trying to
#   perform an snmp SET operation to the sysContact.0 variable will make
#   the agent return the "notWritable" error code.  IE, including
#   this token in the snmpd.conf file will disable write access to
#   the variable.
#   arguments:  contact_string

syscontact Root <root@localhost> (configure /etc/snmp/snmp.local.conf)



###########################################################################
# SECTION: Access Control Setup
#
#   This section defines who is allowed to talk to your running
#   snmp agent.

# rwcommunity: a SNMPv1/SNMPv2c read-write access community name
#   arguments:  community [default|hostname|network/bits] [oid]

rwcommunity  public  



###########################################################################
# SECTION: Extending the Agent
#
#   You can extend the snmp agent to have it return information
#   that you yourself define.

# pass: Run a command that intepretes the request for an entire tree.
#   The pass program defined here will get called for all
#   requests below a certain point in the mib tree.  It is then
#   responsible for returning the right data beyond that point.
#   
#   arguments: miboid program
#   
#   example: pass .1.3.6.1.4.1.2021.255 /path/to/local/passtest
#   
#   See the snmpd.conf manual page for further information.
#   
#   Consider using "pass_persist" for a performance increase.

#pass .1.3.6.1.4.1.4413.4.1 /usr/bin/ucd5820stat




####
# First, map the community name "public" into a "security name"

#       sec.name  source          community
com2sec notConfigUser  default       public


####
# Second, map the security name into a group name:

#       groupName      securityModel securityName
group   notConfigGroup v1           notConfigUser
group   notConfigGroup v2c           notConfigUser


####
# Third, create a view for us to let the group have rights to:
# Make at least  snmpwalk -v 1 localhost -c public system fast again.
#       name           incl/excl     subtree         mask(optional)
view    systemview    included   .1.3.6.1.2.1.1
view    systemview    included   .1.3.6.1.2.1.25
view    systemview    included   .1.3.6.1.4.1.2021


####
# Finally, grant the group read-only access to the systemview view.

#       group          context sec.model sec.level prefix read   write  notif
access  notConfigGroup ""      any       noauth    exact  systemview systemview systemview

####
# Monitor Processes
proc syslogd 1 1