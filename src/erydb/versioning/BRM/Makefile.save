# Makefile.in generated by automake 1.15 from Makefile.am.
# versioning/BRM/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2014 EryDB, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 of
# the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301, USA.

# $Id: Makefile.am 864 2009-04-02 19:22:49Z rdempsey $




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/erydb
pkgincludedir = $(includedir)/erydb
pkglibdir = $(libdir)/erydb
pkglibexecdir = $(libexecdir)/erydb
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = controllernode$(EXEEXT) workernode$(EXEEXT) \
	dbrmctl$(EXEEXT) reset_locks$(EXEEXT) rollback$(EXEEXT) \
	save_brm$(EXEEXT) load_brm$(EXEEXT)
subdir = versioning/BRM
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(include_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libbrm_la_LIBADD =
am_libbrm_la_OBJECTS = libbrm_la-autoincrementmanager.lo \
	libbrm_la-blockresolutionmanager.lo libbrm_la-brmshmimpl.lo \
	libbrm_la-brmtypes.lo libbrm_la-copylocks.lo libbrm_la-dbrm.lo \
	libbrm_la-extentmap.lo libbrm_la-lbidresourcegraph.lo \
	libbrm_la-logicalpartition.lo libbrm_la-mastersegmenttable.lo \
	libbrm_la-oidserver.lo libbrm_la-resourcenode.lo \
	libbrm_la-rgnode.lo libbrm_la-rwlockmonitor.lo \
	libbrm_la-sessionmanagerserver.lo libbrm_la-shmkeys.lo \
	libbrm_la-slavedbrmnode.lo libbrm_la-slavecomm.lo \
	libbrm_la-tablelockserver.lo libbrm_la-tracer.lo \
	libbrm_la-transactionnode.lo libbrm_la-undoable.lo \
	libbrm_la-vbbm.lo libbrm_la-vss.lo
libbrm_la_OBJECTS = $(am_libbrm_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbrm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(libbrm_la_CXXFLAGS) \
	$(CXXFLAGS) $(libbrm_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_controllernode_OBJECTS = masternode.$(OBJEXT) \
	masterdbrmnode.$(OBJEXT)
controllernode_OBJECTS = $(am_controllernode_OBJECTS)
controllernode_DEPENDENCIES = libbrm.la
controllernode_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(controllernode_LDFLAGS) \
	$(LDFLAGS) -o $@
am_dbrmctl_OBJECTS = dbrmctl.$(OBJEXT)
dbrmctl_OBJECTS = $(am_dbrmctl_OBJECTS)
dbrmctl_DEPENDENCIES = libbrm.la
dbrmctl_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(dbrmctl_LDFLAGS) $(LDFLAGS) -o $@
am_load_brm_OBJECTS = load_brm.$(OBJEXT)
load_brm_OBJECTS = $(am_load_brm_OBJECTS)
load_brm_DEPENDENCIES = libbrm.la
load_brm_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(load_brm_LDFLAGS) $(LDFLAGS) -o $@
am_reset_locks_OBJECTS = reset_locks.$(OBJEXT)
reset_locks_OBJECTS = $(am_reset_locks_OBJECTS)
reset_locks_DEPENDENCIES = libbrm.la
reset_locks_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(reset_locks_LDFLAGS) $(LDFLAGS) -o $@
am_rollback_OBJECTS = rollback.$(OBJEXT)
rollback_OBJECTS = $(am_rollback_OBJECTS)
rollback_DEPENDENCIES = libbrm.la
rollback_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rollback_LDFLAGS) $(LDFLAGS) -o $@
am_save_brm_OBJECTS = save_brm.$(OBJEXT)
save_brm_OBJECTS = $(am_save_brm_OBJECTS)
save_brm_DEPENDENCIES = libbrm.la
save_brm_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(save_brm_LDFLAGS) $(LDFLAGS) -o $@
am_workernode_OBJECTS = slavenode.$(OBJEXT)
workernode_OBJECTS = $(am_workernode_OBJECTS)
workernode_DEPENDENCIES = libbrm.la
workernode_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(workernode_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libbrm_la_SOURCES) $(controllernode_SOURCES) \
	$(dbrmctl_SOURCES) $(load_brm_SOURCES) $(reset_locks_SOURCES) \
	$(rollback_SOURCES) $(save_brm_SOURCES) $(workernode_SOURCES)
DIST_SOURCES = $(libbrm_la_SOURCES) $(controllernode_SOURCES) \
	$(dbrmctl_SOURCES) $(load_brm_SOURCES) $(reset_locks_SOURCES) \
	$(rollback_SOURCES) $(save_brm_SOURCES) $(workernode_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/builder/erydb-server/erydb-engine/missing aclocal-1.15
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/builder/erydb-server/erydb-engine/missing autoconf
AUTOHEADER = ${SHELL} /home/builder/erydb-server/erydb-engine/missing autoheader
AUTOMAKE = ${SHELL} /home/builder/erydb-server/erydb-engine/missing automake-1.15
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/builder/erydb-server/erydb-engine/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = erydb
PACKAGE_BUGREPORT = support@mariadb.com
PACKAGE_NAME = erydb
PACKAGE_STRING = erydb 1.0.2
PACKAGE_TARNAME = erydb
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.2
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.0.2
XML2_CONFIG = /usr/bin/xml2-config
XML_CPPFLAGS = -I/usr/include/libxml2
XML_LIBS = -lxml2
YACC = bison -y
YFLAGS = 
abs_builddir = /home/builder/erydb-server/erydb-engine/versioning/BRM
abs_srcdir = /home/builder/erydb-server/erydb-engine/versioning/BRM
abs_top_builddir = /home/builder/erydb-server/erydb-engine
abs_top_srcdir = /home/builder/erydb-server/erydb-engine
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${erydbinstall}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
etcdir = ${erydbinstall}/etc
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
erydb_brm_libs = ${abs_top_builddir}/versioning/BRM/libbrm.la ${abs_top_builddir}/utils/erydbdatafile/liberydbdatafile.la ${abs_top_builddir}/utils/cacheutils/libcacheutils.la ${abs_top_builddir}/utils/rwlock/librwlock.la ${erydb_oam_libs} ${erydb_common_libs}
erydb_cflags = -g0 -O3 -fno-strict-aliasing -Wall
erydb_common_includes = -I${abs_top_builddir}/utils/libxml -I${abs_top_builddir}/utils/messageqcpp -I${abs_top_builddir}/writeengine/shared -I${abs_top_builddir}/utils/erydbdatafile -I${abs_top_builddir}/utils/loggingcpp -I${abs_top_builddir}/utils/configcpp -I${abs_top_builddir}/utils/compress -I${abs_top_builddir}/versioning/BRM -I${abs_top_builddir}/utils/rowgroup -I${abs_top_builddir}/utils/common -I${abs_top_builddir}/utils/dataconvert -I${abs_top_builddir}/utils/rwlock -I${abs_top_builddir}/utils/funcexp -I${abs_top_builddir}/snmpd/snmpmanager -I${abs_top_builddir}/utils -I${abs_top_builddir}/oam/oamcpp -I${abs_top_builddir}/dbcon/ddlpackageproc -I${abs_top_builddir}/dbcon/ddlpackage -I${abs_top_builddir}/dbcon/execplan -I${abs_top_builddir}/utils/startup -I${abs_top_builddir}/dbcon/joblist -I${abs_top_builddir}/writeengine/wrapper -I${abs_top_builddir}/writeengine/server -I${abs_top_builddir}/dbcon/dmlpackage -I${abs_top_builddir}/writeengine/client -I${abs_top_builddir}/dbcon/dmlpackageproc -I${abs_top_builddir}/utils/cacheutils -I${abs_top_builddir}/utils/mysqlcl_erydb -I${abs_top_builddir}/utils/querytele -I${abs_top_builddir}/utils/boost_erydb -I${abs_top_builddir}/utils/thrift -I${abs_top_builddir}/utils/joiner -I${abs_top_builddir}/utils/threadpool -I${abs_top_builddir}/utils/batchloader -I${abs_top_builddir}/utils/ddlcleanup -I${abs_top_builddir}/utils/querystats -I${abs_top_builddir}/writeengine/xml -I${abs_top_builddir}/../../../sql -I${abs_top_builddir}/../../../include -I${abs_top_builddir}/../../../pcre -I${abs_top_builddir}/../sql -I${abs_top_builddir}/../include -I${abs_top_builddir}/../pcre -I${abs_top_builddir}/net-snmp/net-snmp -I${abs_top_builddir}/net-snmp/net-snmp/include -I${abs_top_builddir}/snmpd/snmpmanager
erydb_common_ldflags = 
erydb_common_libs = ${abs_top_builddir}/utils/messageqcpp/libmessageqcpp.la ${abs_top_builddir}/utils/loggingcpp/libloggingcpp.la ${abs_top_builddir}/utils/configcpp/libconfigcpp.la ${abs_top_builddir}/utils/startup/liberydbboot.a ${abs_top_builddir}/utils/boost_erydb/libboost_erydb.la -lxml2 -lpthread -lrt
erydb_cppflags =  
erydb_cxxflags = -g0 -O3 -fno-strict-aliasing -Wall 
erydb_exec_libs = ${abs_top_builddir}/dbcon/joblist/libjoblist.la ${abs_top_builddir}/dbcon/execplan/libexecplan.la ${abs_top_builddir}/utils/windowfunction/libwindowfunction.la ${abs_top_builddir}/utils/joiner/libjoiner.la ${abs_top_builddir}/utils/rowgroup/librowgroup.la ${abs_top_builddir}/utils/funcexp/libfuncexp.la ${abs_top_builddir}/utils/udfsdk/libudfsdk.la ${abs_top_builddir}/utils/dataconvert/libdataconvert.la ${abs_top_builddir}/utils/common/libcommon.la ${abs_top_builddir}/utils/compress/libcompress.la ${abs_top_builddir}/utils/mysqlcl_erydb/libmysqlcl_erydb.la ${abs_top_builddir}/utils/querystats/libquerystats.la ${abs_top_builddir}/utils/querytele/libquerytele.la ${abs_top_builddir}/utils/thrift/libthrift.la ${abs_top_builddir}/utils/threadpool/libthreadpool.la ${erydb_brm_libs}
erydb_ldflags = -Wl,--rpath -Wl,${erydbinstall}/lib -Wl,--no-as-needed -Wl,--add-needed
erydb_oam_libs = ${abs_top_builddir}/oam/oamcpp/liboamcpp.la ${abs_top_builddir}/snmpd/snmpmanager/libsnmpmanager.la ${netsnmp_libs}
erydb_write_libs = ${abs_top_builddir}/dbcon/ddlpackageproc/libddlpackageproc.la ${abs_top_builddir}/dbcon/ddlpackage/libddlpackage.la ${abs_top_builddir}/dbcon/dmlpackageproc/libdmlpackageproc.la ${abs_top_builddir}/dbcon/dmlpackage/libdmlpackage.la ${abs_top_builddir}/writeengine/wrapper/libwriteengine.la ${abs_top_builddir}/writeengine/client/libwriteengineclient.la ${abs_top_builddir}/utils/erydbdatafile/liberydbdatafile.la ${abs_top_builddir}/utils/cacheutils/libcacheutils.la ${erydb_exec_libs}
erydbinstall = ${prefix}
includedir = ${erydbinstall}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/builder/erydb-server/erydb-engine/install-sh
libdir = ${erydbinstall}/lib
libexecdir = ${exec_prefix}/libexec
localdir = ${erydbinstall}/local
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${erydbinstall}/man
march_flags =  
mibdir = ${erydbinstall}/share/snmp/mibs
mkdir_p = $(MKDIR_P)
mysqldir = ${erydbinstall}/mysql
netsnmp_libs = -L${abs_top_builddir}/net-snmp/net-snmp/snmplib/.libs -L${abs_top_builddir}/net-snmp/net-snmp/agent/helpers/.libs -L${abs_top_builddir}/net-snmp/net-snmp/agent/.libs/ -L${abs_top_builddir}/net-snmp/net-snmp/apps/.libs/ -lnetsnmpmibs -lnetsnmpagent -lnetsnmp -lnetsnmpmibs -lnetsnmphelpers
oldincludedir = /usr/include
pdfdir = ${docdir}
postdir = ${erydbinstall}/post
prefix = /usr/local/erydb
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${erydbinstall}/sbin
sharedir = ${erydbinstall}/share
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${erydbinstall}/etc
target_alias = 
toolsdir = ${erydbinstall}/tools
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS = $(erydb_common_includes) $(erydb_cppflags)
AM_CFLAGS = $(erydb_cflags)
AM_CXXFLAGS = $(erydb_cxxflags)
AM_LDFLAGS = $(erydb_ldflags)
lib_LTLIBRARIES = libbrm.la
libbrm_la_SOURCES = autoincrementmanager.cpp \
blockresolutionmanager.cpp \
brmshmimpl.cpp \
brmtypes.cpp \
copylocks.cpp \
dbrm.cpp \
extentmap.cpp \
lbidresourcegraph.cpp \
logicalpartition.cpp \
mastersegmenttable.cpp \
oidserver.cpp \
resourcenode.cpp \
rgnode.cpp \
rwlockmonitor.cpp \
sessionmanagerserver.cpp \
shmkeys.cpp \
slavedbrmnode.cpp \
slavecomm.cpp \
tablelockserver.cpp \
tracer.cpp \
transactionnode.cpp \
undoable.cpp \
vbbm.cpp \
vss.cpp

libbrm_la_LDFLAGS = -version-info 1:0:0 $(AM_LDFLAGS)
libbrm_la_CXXFLAGS = $(march_flags) $(AM_CXXFLAGS)
include_HEADERS = blockresolutionmanager.h \
brm.h \
brmshmimpl.h \
brmtypes.h \
copylocks.h \
dbrm.h \
extentmap.h \
logicalpartition.h \
mastersegmenttable.h \
sessionmanagerserver.h \
shmkeys.h \
slavecomm.h \
slavedbrmnode.h \
tracer.h \
undoable.h \
vbbm.h \
vss.h

controllernode_SOURCES = masternode.cpp masterdbrmnode.cpp
controllernode_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
controllernode_LDADD = libbrm.la
workernode_SOURCES = slavenode.cpp
workernode_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
workernode_LDADD = libbrm.la
dbrmctl_SOURCES = dbrmctl.cpp
dbrmctl_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
dbrmctl_LDADD = libbrm.la
reset_locks_SOURCES = reset_locks.cpp
reset_locks_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
reset_locks_LDADD = libbrm.la
rollback_SOURCES = rollback.cpp
rollback_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
rollback_LDADD = libbrm.la
save_brm_SOURCES = save_brm.cpp
save_brm_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
save_brm_LDADD = libbrm.la
load_brm_SOURCES = load_brm.cpp
load_brm_LDFLAGS = $(erydb_common_ldflags) $(erydb_oam_libs) $(erydb_exec_libs) $(netsnmp_libs) $(AM_LDFLAGS)
load_brm_LDADD = libbrm.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu versioning/BRM/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu versioning/BRM/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libbrm.la: $(libbrm_la_OBJECTS) $(libbrm_la_DEPENDENCIES) $(EXTRA_libbrm_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbrm_la_LINK) -rpath $(libdir) $(libbrm_la_OBJECTS) $(libbrm_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

controllernode$(EXEEXT): $(controllernode_OBJECTS) $(controllernode_DEPENDENCIES) $(EXTRA_controllernode_DEPENDENCIES) 
	@rm -f controllernode$(EXEEXT)
	$(AM_V_CXXLD)$(controllernode_LINK) $(controllernode_OBJECTS) $(controllernode_LDADD) $(LIBS)

dbrmctl$(EXEEXT): $(dbrmctl_OBJECTS) $(dbrmctl_DEPENDENCIES) $(EXTRA_dbrmctl_DEPENDENCIES) 
	@rm -f dbrmctl$(EXEEXT)
	$(AM_V_CXXLD)$(dbrmctl_LINK) $(dbrmctl_OBJECTS) $(dbrmctl_LDADD) $(LIBS)

load_brm$(EXEEXT): $(load_brm_OBJECTS) $(load_brm_DEPENDENCIES) $(EXTRA_load_brm_DEPENDENCIES) 
	@rm -f load_brm$(EXEEXT)
	$(AM_V_CXXLD)$(load_brm_LINK) $(load_brm_OBJECTS) $(load_brm_LDADD) $(LIBS)

reset_locks$(EXEEXT): $(reset_locks_OBJECTS) $(reset_locks_DEPENDENCIES) $(EXTRA_reset_locks_DEPENDENCIES) 
	@rm -f reset_locks$(EXEEXT)
	$(AM_V_CXXLD)$(reset_locks_LINK) $(reset_locks_OBJECTS) $(reset_locks_LDADD) $(LIBS)

rollback$(EXEEXT): $(rollback_OBJECTS) $(rollback_DEPENDENCIES) $(EXTRA_rollback_DEPENDENCIES) 
	@rm -f rollback$(EXEEXT)
	$(AM_V_CXXLD)$(rollback_LINK) $(rollback_OBJECTS) $(rollback_LDADD) $(LIBS)

save_brm$(EXEEXT): $(save_brm_OBJECTS) $(save_brm_DEPENDENCIES) $(EXTRA_save_brm_DEPENDENCIES) 
	@rm -f save_brm$(EXEEXT)
	$(AM_V_CXXLD)$(save_brm_LINK) $(save_brm_OBJECTS) $(save_brm_LDADD) $(LIBS)

workernode$(EXEEXT): $(workernode_OBJECTS) $(workernode_DEPENDENCIES) $(EXTRA_workernode_DEPENDENCIES) 
	@rm -f workernode$(EXEEXT)
	$(AM_V_CXXLD)$(workernode_LINK) $(workernode_OBJECTS) $(workernode_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dbrmctl.Po
include ./$(DEPDIR)/libbrm_la-autoincrementmanager.Plo
include ./$(DEPDIR)/libbrm_la-blockresolutionmanager.Plo
include ./$(DEPDIR)/libbrm_la-brmshmimpl.Plo
include ./$(DEPDIR)/libbrm_la-brmtypes.Plo
include ./$(DEPDIR)/libbrm_la-copylocks.Plo
include ./$(DEPDIR)/libbrm_la-dbrm.Plo
include ./$(DEPDIR)/libbrm_la-extentmap.Plo
include ./$(DEPDIR)/libbrm_la-lbidresourcegraph.Plo
include ./$(DEPDIR)/libbrm_la-logicalpartition.Plo
include ./$(DEPDIR)/libbrm_la-mastersegmenttable.Plo
include ./$(DEPDIR)/libbrm_la-oidserver.Plo
include ./$(DEPDIR)/libbrm_la-resourcenode.Plo
include ./$(DEPDIR)/libbrm_la-rgnode.Plo
include ./$(DEPDIR)/libbrm_la-rwlockmonitor.Plo
include ./$(DEPDIR)/libbrm_la-sessionmanagerserver.Plo
include ./$(DEPDIR)/libbrm_la-shmkeys.Plo
include ./$(DEPDIR)/libbrm_la-slavecomm.Plo
include ./$(DEPDIR)/libbrm_la-slavedbrmnode.Plo
include ./$(DEPDIR)/libbrm_la-tablelockserver.Plo
include ./$(DEPDIR)/libbrm_la-tracer.Plo
include ./$(DEPDIR)/libbrm_la-transactionnode.Plo
include ./$(DEPDIR)/libbrm_la-undoable.Plo
include ./$(DEPDIR)/libbrm_la-vbbm.Plo
include ./$(DEPDIR)/libbrm_la-vss.Plo
include ./$(DEPDIR)/load_brm.Po
include ./$(DEPDIR)/masterdbrmnode.Po
include ./$(DEPDIR)/masternode.Po
include ./$(DEPDIR)/reset_locks.Po
include ./$(DEPDIR)/rollback.Po
include ./$(DEPDIR)/save_brm.Po
include ./$(DEPDIR)/slavenode.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libbrm_la-autoincrementmanager.lo: autoincrementmanager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-autoincrementmanager.lo -MD -MP -MF $(DEPDIR)/libbrm_la-autoincrementmanager.Tpo -c -o libbrm_la-autoincrementmanager.lo `test -f 'autoincrementmanager.cpp' || echo '$(srcdir)/'`autoincrementmanager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-autoincrementmanager.Tpo $(DEPDIR)/libbrm_la-autoincrementmanager.Plo
#	$(AM_V_CXX)source='autoincrementmanager.cpp' object='libbrm_la-autoincrementmanager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-autoincrementmanager.lo `test -f 'autoincrementmanager.cpp' || echo '$(srcdir)/'`autoincrementmanager.cpp

libbrm_la-blockresolutionmanager.lo: blockresolutionmanager.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-blockresolutionmanager.lo -MD -MP -MF $(DEPDIR)/libbrm_la-blockresolutionmanager.Tpo -c -o libbrm_la-blockresolutionmanager.lo `test -f 'blockresolutionmanager.cpp' || echo '$(srcdir)/'`blockresolutionmanager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-blockresolutionmanager.Tpo $(DEPDIR)/libbrm_la-blockresolutionmanager.Plo
#	$(AM_V_CXX)source='blockresolutionmanager.cpp' object='libbrm_la-blockresolutionmanager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-blockresolutionmanager.lo `test -f 'blockresolutionmanager.cpp' || echo '$(srcdir)/'`blockresolutionmanager.cpp

libbrm_la-brmshmimpl.lo: brmshmimpl.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-brmshmimpl.lo -MD -MP -MF $(DEPDIR)/libbrm_la-brmshmimpl.Tpo -c -o libbrm_la-brmshmimpl.lo `test -f 'brmshmimpl.cpp' || echo '$(srcdir)/'`brmshmimpl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-brmshmimpl.Tpo $(DEPDIR)/libbrm_la-brmshmimpl.Plo
#	$(AM_V_CXX)source='brmshmimpl.cpp' object='libbrm_la-brmshmimpl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-brmshmimpl.lo `test -f 'brmshmimpl.cpp' || echo '$(srcdir)/'`brmshmimpl.cpp

libbrm_la-brmtypes.lo: brmtypes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-brmtypes.lo -MD -MP -MF $(DEPDIR)/libbrm_la-brmtypes.Tpo -c -o libbrm_la-brmtypes.lo `test -f 'brmtypes.cpp' || echo '$(srcdir)/'`brmtypes.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-brmtypes.Tpo $(DEPDIR)/libbrm_la-brmtypes.Plo
#	$(AM_V_CXX)source='brmtypes.cpp' object='libbrm_la-brmtypes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-brmtypes.lo `test -f 'brmtypes.cpp' || echo '$(srcdir)/'`brmtypes.cpp

libbrm_la-copylocks.lo: copylocks.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-copylocks.lo -MD -MP -MF $(DEPDIR)/libbrm_la-copylocks.Tpo -c -o libbrm_la-copylocks.lo `test -f 'copylocks.cpp' || echo '$(srcdir)/'`copylocks.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-copylocks.Tpo $(DEPDIR)/libbrm_la-copylocks.Plo
#	$(AM_V_CXX)source='copylocks.cpp' object='libbrm_la-copylocks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-copylocks.lo `test -f 'copylocks.cpp' || echo '$(srcdir)/'`copylocks.cpp

libbrm_la-dbrm.lo: dbrm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-dbrm.lo -MD -MP -MF $(DEPDIR)/libbrm_la-dbrm.Tpo -c -o libbrm_la-dbrm.lo `test -f 'dbrm.cpp' || echo '$(srcdir)/'`dbrm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-dbrm.Tpo $(DEPDIR)/libbrm_la-dbrm.Plo
#	$(AM_V_CXX)source='dbrm.cpp' object='libbrm_la-dbrm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-dbrm.lo `test -f 'dbrm.cpp' || echo '$(srcdir)/'`dbrm.cpp

libbrm_la-extentmap.lo: extentmap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-extentmap.lo -MD -MP -MF $(DEPDIR)/libbrm_la-extentmap.Tpo -c -o libbrm_la-extentmap.lo `test -f 'extentmap.cpp' || echo '$(srcdir)/'`extentmap.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-extentmap.Tpo $(DEPDIR)/libbrm_la-extentmap.Plo
#	$(AM_V_CXX)source='extentmap.cpp' object='libbrm_la-extentmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-extentmap.lo `test -f 'extentmap.cpp' || echo '$(srcdir)/'`extentmap.cpp

libbrm_la-lbidresourcegraph.lo: lbidresourcegraph.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-lbidresourcegraph.lo -MD -MP -MF $(DEPDIR)/libbrm_la-lbidresourcegraph.Tpo -c -o libbrm_la-lbidresourcegraph.lo `test -f 'lbidresourcegraph.cpp' || echo '$(srcdir)/'`lbidresourcegraph.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-lbidresourcegraph.Tpo $(DEPDIR)/libbrm_la-lbidresourcegraph.Plo
#	$(AM_V_CXX)source='lbidresourcegraph.cpp' object='libbrm_la-lbidresourcegraph.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-lbidresourcegraph.lo `test -f 'lbidresourcegraph.cpp' || echo '$(srcdir)/'`lbidresourcegraph.cpp

libbrm_la-logicalpartition.lo: logicalpartition.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-logicalpartition.lo -MD -MP -MF $(DEPDIR)/libbrm_la-logicalpartition.Tpo -c -o libbrm_la-logicalpartition.lo `test -f 'logicalpartition.cpp' || echo '$(srcdir)/'`logicalpartition.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-logicalpartition.Tpo $(DEPDIR)/libbrm_la-logicalpartition.Plo
#	$(AM_V_CXX)source='logicalpartition.cpp' object='libbrm_la-logicalpartition.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-logicalpartition.lo `test -f 'logicalpartition.cpp' || echo '$(srcdir)/'`logicalpartition.cpp

libbrm_la-mastersegmenttable.lo: mastersegmenttable.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-mastersegmenttable.lo -MD -MP -MF $(DEPDIR)/libbrm_la-mastersegmenttable.Tpo -c -o libbrm_la-mastersegmenttable.lo `test -f 'mastersegmenttable.cpp' || echo '$(srcdir)/'`mastersegmenttable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-mastersegmenttable.Tpo $(DEPDIR)/libbrm_la-mastersegmenttable.Plo
#	$(AM_V_CXX)source='mastersegmenttable.cpp' object='libbrm_la-mastersegmenttable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-mastersegmenttable.lo `test -f 'mastersegmenttable.cpp' || echo '$(srcdir)/'`mastersegmenttable.cpp

libbrm_la-oidserver.lo: oidserver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-oidserver.lo -MD -MP -MF $(DEPDIR)/libbrm_la-oidserver.Tpo -c -o libbrm_la-oidserver.lo `test -f 'oidserver.cpp' || echo '$(srcdir)/'`oidserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-oidserver.Tpo $(DEPDIR)/libbrm_la-oidserver.Plo
#	$(AM_V_CXX)source='oidserver.cpp' object='libbrm_la-oidserver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-oidserver.lo `test -f 'oidserver.cpp' || echo '$(srcdir)/'`oidserver.cpp

libbrm_la-resourcenode.lo: resourcenode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-resourcenode.lo -MD -MP -MF $(DEPDIR)/libbrm_la-resourcenode.Tpo -c -o libbrm_la-resourcenode.lo `test -f 'resourcenode.cpp' || echo '$(srcdir)/'`resourcenode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-resourcenode.Tpo $(DEPDIR)/libbrm_la-resourcenode.Plo
#	$(AM_V_CXX)source='resourcenode.cpp' object='libbrm_la-resourcenode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-resourcenode.lo `test -f 'resourcenode.cpp' || echo '$(srcdir)/'`resourcenode.cpp

libbrm_la-rgnode.lo: rgnode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-rgnode.lo -MD -MP -MF $(DEPDIR)/libbrm_la-rgnode.Tpo -c -o libbrm_la-rgnode.lo `test -f 'rgnode.cpp' || echo '$(srcdir)/'`rgnode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-rgnode.Tpo $(DEPDIR)/libbrm_la-rgnode.Plo
#	$(AM_V_CXX)source='rgnode.cpp' object='libbrm_la-rgnode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-rgnode.lo `test -f 'rgnode.cpp' || echo '$(srcdir)/'`rgnode.cpp

libbrm_la-rwlockmonitor.lo: rwlockmonitor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-rwlockmonitor.lo -MD -MP -MF $(DEPDIR)/libbrm_la-rwlockmonitor.Tpo -c -o libbrm_la-rwlockmonitor.lo `test -f 'rwlockmonitor.cpp' || echo '$(srcdir)/'`rwlockmonitor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-rwlockmonitor.Tpo $(DEPDIR)/libbrm_la-rwlockmonitor.Plo
#	$(AM_V_CXX)source='rwlockmonitor.cpp' object='libbrm_la-rwlockmonitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-rwlockmonitor.lo `test -f 'rwlockmonitor.cpp' || echo '$(srcdir)/'`rwlockmonitor.cpp

libbrm_la-sessionmanagerserver.lo: sessionmanagerserver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-sessionmanagerserver.lo -MD -MP -MF $(DEPDIR)/libbrm_la-sessionmanagerserver.Tpo -c -o libbrm_la-sessionmanagerserver.lo `test -f 'sessionmanagerserver.cpp' || echo '$(srcdir)/'`sessionmanagerserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-sessionmanagerserver.Tpo $(DEPDIR)/libbrm_la-sessionmanagerserver.Plo
#	$(AM_V_CXX)source='sessionmanagerserver.cpp' object='libbrm_la-sessionmanagerserver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-sessionmanagerserver.lo `test -f 'sessionmanagerserver.cpp' || echo '$(srcdir)/'`sessionmanagerserver.cpp

libbrm_la-shmkeys.lo: shmkeys.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-shmkeys.lo -MD -MP -MF $(DEPDIR)/libbrm_la-shmkeys.Tpo -c -o libbrm_la-shmkeys.lo `test -f 'shmkeys.cpp' || echo '$(srcdir)/'`shmkeys.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-shmkeys.Tpo $(DEPDIR)/libbrm_la-shmkeys.Plo
#	$(AM_V_CXX)source='shmkeys.cpp' object='libbrm_la-shmkeys.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-shmkeys.lo `test -f 'shmkeys.cpp' || echo '$(srcdir)/'`shmkeys.cpp

libbrm_la-slavedbrmnode.lo: slavedbrmnode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-slavedbrmnode.lo -MD -MP -MF $(DEPDIR)/libbrm_la-slavedbrmnode.Tpo -c -o libbrm_la-slavedbrmnode.lo `test -f 'slavedbrmnode.cpp' || echo '$(srcdir)/'`slavedbrmnode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-slavedbrmnode.Tpo $(DEPDIR)/libbrm_la-slavedbrmnode.Plo
#	$(AM_V_CXX)source='slavedbrmnode.cpp' object='libbrm_la-slavedbrmnode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-slavedbrmnode.lo `test -f 'slavedbrmnode.cpp' || echo '$(srcdir)/'`slavedbrmnode.cpp

libbrm_la-slavecomm.lo: slavecomm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-slavecomm.lo -MD -MP -MF $(DEPDIR)/libbrm_la-slavecomm.Tpo -c -o libbrm_la-slavecomm.lo `test -f 'slavecomm.cpp' || echo '$(srcdir)/'`slavecomm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-slavecomm.Tpo $(DEPDIR)/libbrm_la-slavecomm.Plo
#	$(AM_V_CXX)source='slavecomm.cpp' object='libbrm_la-slavecomm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-slavecomm.lo `test -f 'slavecomm.cpp' || echo '$(srcdir)/'`slavecomm.cpp

libbrm_la-tablelockserver.lo: tablelockserver.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-tablelockserver.lo -MD -MP -MF $(DEPDIR)/libbrm_la-tablelockserver.Tpo -c -o libbrm_la-tablelockserver.lo `test -f 'tablelockserver.cpp' || echo '$(srcdir)/'`tablelockserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-tablelockserver.Tpo $(DEPDIR)/libbrm_la-tablelockserver.Plo
#	$(AM_V_CXX)source='tablelockserver.cpp' object='libbrm_la-tablelockserver.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-tablelockserver.lo `test -f 'tablelockserver.cpp' || echo '$(srcdir)/'`tablelockserver.cpp

libbrm_la-tracer.lo: tracer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-tracer.lo -MD -MP -MF $(DEPDIR)/libbrm_la-tracer.Tpo -c -o libbrm_la-tracer.lo `test -f 'tracer.cpp' || echo '$(srcdir)/'`tracer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-tracer.Tpo $(DEPDIR)/libbrm_la-tracer.Plo
#	$(AM_V_CXX)source='tracer.cpp' object='libbrm_la-tracer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-tracer.lo `test -f 'tracer.cpp' || echo '$(srcdir)/'`tracer.cpp

libbrm_la-transactionnode.lo: transactionnode.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-transactionnode.lo -MD -MP -MF $(DEPDIR)/libbrm_la-transactionnode.Tpo -c -o libbrm_la-transactionnode.lo `test -f 'transactionnode.cpp' || echo '$(srcdir)/'`transactionnode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-transactionnode.Tpo $(DEPDIR)/libbrm_la-transactionnode.Plo
#	$(AM_V_CXX)source='transactionnode.cpp' object='libbrm_la-transactionnode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-transactionnode.lo `test -f 'transactionnode.cpp' || echo '$(srcdir)/'`transactionnode.cpp

libbrm_la-undoable.lo: undoable.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-undoable.lo -MD -MP -MF $(DEPDIR)/libbrm_la-undoable.Tpo -c -o libbrm_la-undoable.lo `test -f 'undoable.cpp' || echo '$(srcdir)/'`undoable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-undoable.Tpo $(DEPDIR)/libbrm_la-undoable.Plo
#	$(AM_V_CXX)source='undoable.cpp' object='libbrm_la-undoable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-undoable.lo `test -f 'undoable.cpp' || echo '$(srcdir)/'`undoable.cpp

libbrm_la-vbbm.lo: vbbm.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-vbbm.lo -MD -MP -MF $(DEPDIR)/libbrm_la-vbbm.Tpo -c -o libbrm_la-vbbm.lo `test -f 'vbbm.cpp' || echo '$(srcdir)/'`vbbm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-vbbm.Tpo $(DEPDIR)/libbrm_la-vbbm.Plo
#	$(AM_V_CXX)source='vbbm.cpp' object='libbrm_la-vbbm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-vbbm.lo `test -f 'vbbm.cpp' || echo '$(srcdir)/'`vbbm.cpp

libbrm_la-vss.lo: vss.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -MT libbrm_la-vss.lo -MD -MP -MF $(DEPDIR)/libbrm_la-vss.Tpo -c -o libbrm_la-vss.lo `test -f 'vss.cpp' || echo '$(srcdir)/'`vss.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbrm_la-vss.Tpo $(DEPDIR)/libbrm_la-vss.Plo
#	$(AM_V_CXX)source='vss.cpp' object='libbrm_la-vss.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbrm_la_CXXFLAGS) $(CXXFLAGS) -c -o libbrm_la-vss.lo `test -f 'vss.cpp' || echo '$(srcdir)/'`vss.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


.PHONY: dbrm
.PRECIOUS: dbrm
dbrm: controllernode workernode dbrmctl 

tools: reset_locks rollback save_brm load_brm

install_dbrm:

install_tools:

test-dbrm:

test:

coverage:

leakcheck:

docs:

bootstrap: install-data-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
